@startuml
actor User
package "Presentation Layer" {
card "Model View Controler" as MVC {
    card View [
    <b>View
    ----
    display Interface
    ]
    card Model [
    <b>Model
    ----
    look after data
    ]
    card Controler [
    <b>Controler
    ----
    look after user's request
    ]
    View --> Controler : User input
    Controler --> Model : Manipulate data
    Model --> View : Update view
}
}
card api [
    <b>API Gateway
    ---
    Permit to access
    to micro-services
]
Model --> api
package "Database layer" {
    database user [
        <b> Profile_SQL database
        ---
        Store all informations
        about profile of user
    ]
    database hobbies [
        <b> Hobbies_SQL database
        ---
        Store all hobbies
        and activities that
        can be made by a student
    ]
    database Group [
        <b> Group_SQL database
        ---
        Store members, media,
        messages, documents...
    ]
}
package "Business Layer" {
card "Micro-services" as MS {
    card auth [
        <b>Authentification
        ----
        Look after user's authentification
        registration etc...
    ]
    card search [
        <b>Search
        ---
        Look after research of
        students in Database
    ]
    card filter [
        <b>Filter
        ---
        Filter hobbies
        interest of students
        Sections
    ]
    card match [
        <b>Match
        ---
        Search students
        who match
    ]

match --> search : can search matches
filter --> search : can be used to search easily
auth --> search : must be login
search --> user : request
user --> search : response
}
}

api --> MS

User --> MVC

@enduml